yml
version: "3"

services:
# UCI API
  uci-api-service:
    build: ./uci-apis/v2/uci
    image: federation-service
    env_file: .env
    ports:
      - 9999:3002
    networks:
      uci-overlay:


  uci-api-db-gql:
    image: hasura/graphql-engine:v2.7.0
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgresql:${UCI_API_POSTGRES_PASSWORD}@${POSTGRES_HOST}:${UCI_API_DB_PORT}/${UCI_API_POSTGRES_DB}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${UCI_API_DB_GRAPHQL_SECRET}
    ports:
      - "15003:8080"
    networks:
      uci-overlay:


# UCI PWA Adapter
  uci-transport-socket:
    image: samagragovernance/uci-transport-socket:v2.1.8
    environment:
      REDIS_HOST: ${TRANSPORT_SOCKET_CACHE_HOST}
      REDIS_PORT: ${TRANSPORT_SOCKET_CACHE_PORT}
      SERVER_PORT: 3005
      ADAPTER_URL: "http://inbound:8085/pwa/web"
    ports:
      - 3005:3005
    networks:
      uci-overlay:


  uci-admin:
    image: uci-admin
    build:
      context: uci-admin
      args:
        NG_APP_url: ${NG_APP_url}
        NG_APP_nl_url: ${NG_APP_nl_url}
        NG_APP_nl_login_url: ${NG_APP_nl_login_url}
        NG_APP_nl_login_token: ${NG_APP_nl_login_token}hist
        NG_APP_nl_application_id: ${NG_APP_nl_application_id}
        NG_APP_blobUrl: ${NG_APP_blobUrl}
        NG_APP_botPhoneNumber: ${NG_APP_botPhoneNumber}
        NG_APP_adapterId: ${NG_APP_adapterId}
        NG_APP_broadcastAdapterId: ${NG_APP_broadcastAdapterId}
        NG_APP_userId: ${NG_APP_userId}
        NG_APP_orgId: ${NG_APP_orgId}
        NG_APP_token: ${NG_APP_token}
    ports:
    - "9097:80"


# UCI Core
  inbound:
    image: "samagragovernance/inbound:${CURRENT_VERSION}"
    env_file: .env
    ports:
      - "0.0.0.0:${INBOUND_EXTERNAL_PORT}:${INBOUND_INTERNAL_PORT}"
    networks:
      uci-overlay:


  orchestrator:
    image: "samagragovernance/orchestrator:${CURRENT_VERSION}"
    env_file: .env
    ports:
      - "${ORCHESTRATOR_INTERNAL_PORT}:${ORCHESTRATOR_INTERNAL_PORT}"
    networks:
      uci-overlay:


  transformer:
    image: "samagragovernance/transformer:${CURRENT_VERSION}"
    env_file: .env
    ports:
      - "${TRANSFORMER_INTERNAL_PORT}:${TRANSFORMER_INTERNAL_PORT}"
    networks:
      uci-overlay:


  outbound:
    image: "samagragovernance/outbound:${CURRENT_VERSION}"
    env_file: .env
    ports:
      - "${OUTBOUND_INTERNAL_PORT}:${OUTBOUND_INTERNAL_PORT}"
    networks:
      uci-overlay:


  broadcast-transformer:
    image: "samagragovernance/broadcast-transformer:${CURRENT_VERSION}"
    env_file: .env
    ports:
      - "${BROADCAST_TRANSFORMER_INTERNAL_PORT}:${BROADCAST_TRANSFORMER_INTERNAL_PORT}"
    networks:
      uci-overlay:


  graphql-formsdb:
    image: hasura/graphql-engine:latest
    ports:
      - "15002:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgresql:${FORMS_DB_PASSWORD}@${FORMS_DB_HOST}:${FORMS_DB_PORT}/formsdb
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${FORMS_DB_GRAPHQL_SECRET}
    networks:
      uci-overlay:


  aggregate-server:
    image: tomcat:alpine
    environment:
      - DB_USERNAME=${ODK_POSTGRES_USER}
      - DB_SCHEMA=public
      - DB_PASSWORD=${ODK_POSTGRES_PASSWORD}
      - DB_NAME=${ODK_POSTGRES_DB}
      - DB_PORT=5432
      - AGGREGATE_HOST=
      - DB_URL=jdbc:postgresql://${ODK_POSTGRES_HOST}/${ODK_POSTGRES_DB}?user=${ODK_POSTGRES_USER}&password=${ODK_POSTGRES_PASSWORD}
    ports:
      - 8080:8080
    volumes:
      - ./odk-aggregate/odk/webapps:/usr/local/tomcat/webapps
    networks:
      uci-overlay:


  fusionauth:
    image: fusionauth/fusionauth-app:latest
    environment:
      DATABASE_URL: jdbc:postgresql://${FUSIONAUTH_DB_URL}/fusionauth
      DATABASE_ROOT_USERNAME: ${FUSIONAUTH_POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${FUSIONAUTH_POSTGRES_PASSWORD}
      DATABASE_USERNAME: ${FUSIONAUTH_DATABASE_USERNAME}
      DATABASE_PASSWORD: ${FUSIONAUTH_DATABASE_PASSWORD}
      FUSIONAUTH_SEARCH_ENGINE_TYPE: elasticsearch
      FUSIONAUTH_SEARCH_SERVERS: http://elastic:${ELASTIC_PASSWORD}@${ES_HOST}
      FUSIONAUTH_URL: http://fusionauth:9011
      FUSIONAUTH_API_KEY: ${FUSIONAUTH_API_KEY}
      FUSIONAUTH_APP_KICKSTART_FILE: ${FUSIONAUTH_APP_KICKSTART_FILE}
      FUSIONAUTH_ADMIN_EMAIL: ${FUSIONAUTH_ADMIN_EMAIL}
      FUSIONAUTH_ADMIN_PASSWORD: ${FUSIONAUTH_ADMIN_PASSWORD}
    ports:
      - 9011:9011
    volumes:
      - ./kickstart:/usr/local/fusionauth/kickstart
    networks:
      uci-overlay:

networks:
  uci-overlay:
    external: true